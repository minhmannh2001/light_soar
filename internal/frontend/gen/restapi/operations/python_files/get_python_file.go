// Code generated by go-swagger; DO NOT EDIT.

package python_files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetPythonFileHandlerFunc turns a function with the right signature into a get python file handler
type GetPythonFileHandlerFunc func(GetPythonFileParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetPythonFileHandlerFunc) Handle(params GetPythonFileParams) middleware.Responder {
	return fn(params)
}

// GetPythonFileHandler interface for that can handle valid get python file params
type GetPythonFileHandler interface {
	Handle(GetPythonFileParams) middleware.Responder
}

// NewGetPythonFile creates a new http.Handler for the get python file operation
func NewGetPythonFile(ctx *middleware.Context, handler GetPythonFileHandler) *GetPythonFile {
	return &GetPythonFile{Context: ctx, Handler: handler}
}

/*
	GetPythonFile swagger:route GET /python-files/{name} python_files getPythonFile

Get a Python file by name
*/
type GetPythonFile struct {
	Context *middleware.Context
	Handler GetPythonFileHandler
}

func (o *GetPythonFile) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetPythonFileParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
